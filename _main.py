from vkbottle.bot import Bot, Message, BotLabeler
from vkbottle import API, BaseStateGroup, VKAPIError, VKAPIError, BaseMiddleware
from mcrcon import MCRcon
import asyncio
import json
import re

from _permission_rule import Permission
from settings import token, rcon_pass, rcon_address, owner_id, prefix_cmd

# –¢–æ–∫–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ settings.py
bot = Bot(token)


# –ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å, –µ—Å–ª–∏ –Ω–∞–ø–∏—à–µ—Ç –≥—Ä—É–ø–ø–∞
class NoBotMiddleware(BaseMiddleware[Message]):
    async def pre(self):
        if self.event.from_id < 0:
            self.stop("–ì—Ä—É–ø–ø–∞–º –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.")


# ------------------------.—Å–µ—Ä–≤–µ—Ä –¥–æ–±–∞–≤–∏—Ç—å--------------------------------

def w_server(new_data):
    with open('servers.json', 'r+', encoding='utf-8') as file:
        file_data = json.load(file)
        for i in file_data['servers']:
            file_data["servers"].append(new_data)
            file.seek(0)
            json.dump(file_data, file, indent=4, ensure_ascii=False)
            break


def easy_already_server(name_server):
    with open('servers.json', encoding='utf-8') as json_file:
        data = json.load(json_file)
        for i in data['servers']:
            if i['name'] == str(name_server):
                return True


@bot.on.private_message(Permission(), text='{0}—Å–µ—Ä–≤–µ—Ä –≥–µ–Ω <name> <ip> <passw>'.format(prefix_cmd))
async def cmd_add_server(message: Message, name, ip, passw):
    try:
        # –µ—Å–ª–∏ name —Å—É—â–µ—Å—Ç–≤—É–µ—Ç == True:

        if easy_already_server(name_server=name) == True:
            await message.reply('‚ö† | –¢–∞–∫–æ–µ –∏–º—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        else:
            y = {
                "name": name,
                "rcon_ip": ip,
                "rcon_pass": passw
            }
            w_server(y)
            await message.reply(
                '‚ôª | –°–µ—Ä–≤–µ—Ä {0}, —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: \n- –ü–∞—Ä–æ–ª—å {1}\n- –ê–π–ø–∏ {2}\n\n–ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω!'.format(name, passw, ip))
    except Exception as e:
        await message.reply(e)


# --------------------------------------------------------


def easy_create_user(new_data):
    with open('servers.json', 'r+', encoding='utf-8') as file:
        file_data = json.load(file)
        for i in file_data['users']:
            file_data["users"].append(new_data)
            file.seek(0)
            json.dump(file_data, file, indent=4, ensure_ascii=False)
            break


def easy_get_user(id):
    with open('servers.json', encoding='utf-8') as json_file:
        data = json.load(json_file)
        for i in data['users']:
            if i['id'] == str(id):
                return True


def easy_get_perm(perm, id):
    with open('servers.json', encoding='utf-8') as json_file:
        data = json.load(json_file)
        for i in data['users']:
            if i['id'] == str(id):
                if i['perms'] == str(perm):
                    perms = i['perms']
                    return perms


def easy_update_perm(id, perm):
    with open("servers.json", "r+", encoding='utf-8') as jsonFile:
        data = json.load(jsonFile)

    for i in data['users']:
        if i["id"] == str(id):
            i["perms"] = perm
            with open("servers.json", "w", encoding='utf-8') as jsonFile:
                json.dump(data, jsonFile, indent=4, ensure_ascii=False)
            return True


@bot.on.private_message(Permission(), text='{0}–ø—Ä–∞–≤–∞ —Å–µ—Ç <user> <perms>'.format(prefix_cmd))
async def cmd_set_perms(message: Message, user, perms):
    id_ = re.findall(r'.–ø—Ä–∞–≤–∞ —Å–µ—Ç \[id(\d*)\|.*]', message.text)
    new_id = id_[0]
    try:
        if easy_get_user(id=new_id) == True:
            if easy_get_perm(perm=perms, id=new_id) == perms:
                await message.reply('‚ö† | –Æ–∑–µ—Ä —É–∂–µ –∏–º–µ–µ—Ç —Ç–∞–∫–∏–µ –ø—Ä–∞–≤–∞')
                return
        if perms not in all_perms(ret='massive'):
            await message.reply('‚ö† | –ü—Ä–∞–≤–∞ {0} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!'.format(perms))


        elif easy_get_user(id=new_id) == True:
            if perms in all_perms(ret='massive'):
                easy_update_perm(id=new_id, perm=perms)
                await message.reply('‚ôª | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {0}, —Å –ø—Ä–∞–≤–∞–º–∏ {1}, –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω!'.format(new_id, perms))

        elif perms in all_perms(ret='massive'):
            y = {
                "id": "{0}".format(new_id),
                "perms": perms
            }
            easy_create_user(y)
            await message.reply('‚ôª | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {0}, —Å –ø—Ä–∞–≤–∞–º–∏ {1}, –±—ã–ª —Å–æ–∑–¥–∞–Ω!'.format(new_id, perms))
    except Exception as e:
        await message.reply(e)


# ------------------------.—Å–µ—Ä–≤–µ—Ä–∞--------------------------------

def all_servers():
    with open("servers.json", "r+", encoding='utf-8') as jsonFile:
        data = json.load(jsonFile)
    servers = ''
    for i in data['servers']:
        servers += '| {0} / {1},\n'.format(i['name'], i['rcon_ip'])
    return servers


@bot.on.private_message(Permission(), text='{0}—Å–µ—Ä–≤–µ—Ä–∞'.format(prefix_cmd))
async def cmd_all_servers(message: Message):
    await message.reply("‚ôª | –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä–∞: \n" +
                        all_servers())


# --------------------------------------------------------


# ------------------------.–ø—Ä–∞–≤–∞-<name>-–∑–Ω–∞—á–µ–Ω–∏—è-------------------------------

def check_perms(name_perms, ret: ('all_perms', 'perms') = None):
    with open("servers.json", "r+", encoding='utf-8') as jsonFile:
        data = json.load(jsonFile)
    for a in data["perms"]:
        for x in a['{0}'.format(name_perms)]:
            all_perms = x['all']
            perms_list = ''
            for perms in x['perm']:
                perms_list += ' {0} |'.format(perms)
            match ret:
                case 'all_perms':
                    return all_perms
                case 'perms':
                    return perms_list


@bot.on.private_message(Permission(), text='{0}–ø—Ä–∞–≤–∞ <name> –∑–Ω–∞—á–µ–Ω–∏—è'.format(prefix_cmd))
async def cmd_perms_list(message: Message, name):
    try:
        if name in all_perms(ret='massive'):
            await message.reply("‚ôª | –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ {0}: \n\n".format(name) +
                                "–ò–º–µ–µ—Ç –≤—Å–µ –ø—Ä–∞–≤–∞: {0} \n".format(check_perms(name_perms=name, ret='all_perms')) +
                                "–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–µ—Ä–º–∏—à–Ω—Å: {0}".format(check_perms(name_perms=name, ret='perms')))
        else:
            await message.reply('‚ùó | –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {0}, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!'.format(name))
    except Exception as e:
        await message.reply(e)


# --------------------------------------------------------


# ------------------------.–ø—Ä–∞–≤–∞--------------------------------

def all_perms(ret: ('massive', 'string') = None):
    with open("servers.json", "r+", encoding='utf-8') as jsonFile:
        data = json.load(jsonFile)
    servers_massive = ''
    servers_string = ''
    for a in data["perms"]:
        servers_string += '{0}'.format(", ".join(list(a.keys())))
        servers_massive += '{0}'.format(list(a.keys()))
        match ret:
            case 'massive':
                return servers_massive
            case 'string':
                return servers_string


@bot.on.private_message(Permission(), text='{0}–ø—Ä–∞–≤–∞'.format(prefix_cmd))
async def cmd_all_perms(message: Message):
    await message.reply("‚ôª | –í—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏: \n" +
                        all_perms(ret='string'))
# --------------------------------------------------------

def profile(ids, ret: ('perm') = None):
    with open("servers.json", "r+", encoding='utf-8') as jsonFile:
        data = json.load(jsonFile)

    perm_string = ''
    for x in data['users']:
        if x['id'] == str(ids):
            perm_string += x['perms']
    match ret:
        case 'perm':
            return perm_string

@bot.on.private_message(text='{0}–ø—Ä–æ—Ñ–∏–ª—å'.format(prefix_cmd))
async def cmd_profile(message: Message):
    await message.reply("‚ôª | –í–∞—à –ü—Ä–æ—Ñ–∏–ª—å: \n\n" +
                        '–°—Ç–∞—Ç—É—Å: {0}'.format(profile(ids=message.from_id, ret='perm')))

# --------------------------------------------------------


def easy_check_server(name_server, ret: ('bool', 'ip', 'passw') = None):
    with open('servers.json', encoding='utf-8') as json_file:
        data = json.load(json_file)
        for i in data['servers']:
            # –ï—Å–ª–∏ name_server –µ—Å—Ç—å –≤ i['name']
            if i['name'] == name_server:
                ip = i['rcon_ip']
                passw = i['rcon_pass']
                match ret:
                    case 'bool':
                        return True
                    case 'ip':
                        return ip
                    case 'passw':
                        return passw


def easy_check_perm(id):
    with open('servers.json', encoding='utf-8') as json_file:
        data = json.load(json_file)
        for i in data['users']:
            if i['id'] == str(id):
                perms = i['perms']
                return perms


def easy_check_perms_user(id):
    with open('servers.json', encoding='utf-8') as json_file:
        data = json.load(json_file)
        for i in data['users']:
            if i['id'] == str(id):
                perms = i['perms']

        for x in data['perms']:
            for y in x['{0}'.format(perms)]:
                perms = y['perm']
                return perms


async def send_message_rcon(msg, cmd, server):
    r_a = easy_check_server(name_server=server, ret='ip')
    r_p = easy_check_server(name_server=server, ret='passw')
    with MCRcon(r_a, r_p) as mcr:
        resp = mcr.command(cmd)
        await msg.reply('üóÇ | –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: /{0}\n'.format(cmd) +
                        '–û—Ç–≤–µ—Ç: \n{0}'.format(resp))


@bot.on.private_message(Permission(), text='{0}<server> <cmd>'.format(prefix_cmd))
async def cmd_send(message: Message, server, cmd):
    try:
        # –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if easy_check_server(name_server=server, ret='bool') == True:
            # –µ—Å–ª–∏ —É from_id —Å—É—â–µ—Å–≤—É—é—Ç –ø—Ä–∞–≤–∞
            with open('servers.json', encoding='utf-8') as json_file:
                data = json.load(json_file)

            if cmd in easy_check_perms_user(id=message.from_id):
                await send_message_rcon(message, cmd, server)
            elif cmd not in easy_check_perms_user(id=message.from_id):
                await message.reply('‚ùó | –í–∞–º –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É {0}'.format(cmd))
            elif message.from_id == owner_id:
                await send_message_rcon(message, cmd, server)
        elif easy_check_server(name_server=server) != True:
            await message.reply('‚ùó | –°–µ—Ä–≤–µ—Ä–∞ {0}, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!'.format(server))
    except OSError:
        await message.reply('‚ùó | –°–µ—Ä–≤–µ—Ä {0}, –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—É'.format(server))
    except Exception as e:
        await message.reply(e)


@bot.on.private_message(Permission(), text='{0}–ø–æ–º–æ—â—å'.format(prefix_cmd))
async def cmd_send(message: Message):
    await message.reply('üìú | –ö–æ–º–∞–Ω–¥—ã: \n'
                        '{0}–ø—Ä–æ—Ñ–∏–ª—å - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.\n'.format(prefix_cmd) +
                        '{0}—Å–µ—Ä–≤–µ—Ä–∞ - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ rcon —Å–µ—Ä–≤–µ—Ä–∞.\n'.format(prefix_cmd) +
                        '{0}<server> <cmd> - –ó–∞–ø—Ä–æ—Å —Ä–∫–æ–Ω –∫–æ–º–∞–Ω–¥—ã.\n'.format(prefix_cmd) +
                        '{0}—Å–µ—Ä–≤–µ—Ä –≥–µ–Ω <name> <ip> <passw> - –°–æ–∑–¥–∞–µ—Ç —Ä–∫–æ–Ω —Å–µ—Ä–≤–µ—Ä.\n'.format(prefix_cmd) +
                        '{0}–ø—Ä–∞–≤–∞ - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏.\n'.format(prefix_cmd) +
                        '{0}–ø—Ä–∞–≤–∞ <perm> –∑–Ω–∞—á–µ–Ω–∏—è - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏.\n'.format(prefix_cmd) +
                        '{0}–ø—Ä–∞–≤–∞ —Å–µ—Ç <@nick> <perm>- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.'.format(prefix_cmd))
                        # '{0}—Å–µ—Ä–≤–µ—Ä –∏–ø <name> <ip> <new_ip> - –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏ ip –Ω–∞ —Ä–∫–æ–Ω —Å–µ—Ä–≤–µ—Ä–µ.'.format(prefix_cmd) +
                        # '{0}—Å–µ—Ä–≤–µ—Ä –ø–∞—Å—Å <name> <pass> <new_pass> - –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏ pass –Ω–∞ —Ä–∫–æ–Ω —Å–µ—Ä–≤–µ—Ä–µ.'.format(prefix_cmd))


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–ª–∞—Å—Å NoBotMiddleware
bot.labeler.message_view.register_middleware(NoBotMiddleware)
# Start
bot.run_forever()
